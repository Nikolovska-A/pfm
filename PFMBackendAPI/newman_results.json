{
  "collection": {
    "_": {
      "postman_id": "1a24bff7-0299-48f9-a76c-d834c12fad82",
      "exporter_id": "13341761"
    },
    "item": [
      {
        "id": "4f8c5469-0896-457d-b6a1-439953446aba",
        "name": "Transactions",
        "item": [
          {
            "id": "f4e03a3b-5cd5-491d-80f2-30bced314b66",
            "name": "Categorize Transaction",
            "item": [
              {
                "id": "5e501e1d-8bf8-4e75-b30e-1571ba0e720a",
                "name": "Categorize Transaction 200",
                "request": {
                  "url": {
                    "path": [
                      "10023191",
                      "categorize"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"catcode\": \"4\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fd888f6-da07-4565-8082-bfa5c26d1408",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "94bf6e8b-905d-4a5d-9c8b-86610326d93c"
                    }
                  }
                ]
              },
              {
                "id": "e9ef95d6-4d70-4fcd-b77b-a967133381b2",
                "name": "Categorize Transaction 404",
                "request": {
                  "url": {
                    "path": [
                      "10023191",
                      "categorize"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"catcode\": \"4555\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2722f033-f44a-4354-83e6-d32d864e03d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 404\", function () {",
                        "    pm.response.to.have.status(404);",
                        "});",
                        "",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "2d49bb92-b480-477a-8439-75debaf8dc24"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "81ef0022-4916-4ce1-84b9-525b4f16673b",
            "name": "Get Transactions",
            "item": [
              {
                "id": "d7ab2158-6bfa-4254-bca3-bb33cfbf2fe8",
                "name": "Get Transactions 200",
                "request": {
                  "url": {
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [
                      {
                        "key": "transactionKind",
                        "value": "wdw,pmt"
                      },
                      {
                        "disabled": true,
                        "key": "startDate",
                        "value": "2021-11-20"
                      },
                      {
                        "disabled": true,
                        "key": "endDate",
                        "value": "2021-11-21"
                      },
                      {
                        "key": "sortBy",
                        "value": "transactionId"
                      },
                      {
                        "key": "sortOrder",
                        "value": "asc"
                      },
                      {
                        "key": "page",
                        "value": "1"
                      },
                      {
                        "key": "pageSize",
                        "value": "10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": []
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c959e68-d710-4af0-8a4d-93335eb942b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"totalCount\": { \"type\": \"number\" },",
                        "        \"pageSize\": { \"type\": \"number\" },",
                        "        \"page\": { \"type\": \"number\" },",
                        "        \"totalPages\": { \"type\": \"number\" },",
                        "        \"sortOrder\": { \"type\": \"number\" },",
                        "        \"sortBy\": { \"type\": \"string\" },",
                        "        \"items\": {",
                        "            \"type\": \"array\",",
                        "            \"items\": {",
                        "                \"type\": \"object\",",
                        "                \"properties\": {",
                        "                    \"transactionId\": { \"type\": \"number\" },",
                        "                    \"beneficiaryName\": { \"type\": \"string\" },",
                        "                    \"date\": { \"type\": \"string\", \"format\": \"date-time\" },",
                        "                    \"direction\": { \"type\": \"string\" },",
                        "                    \"amount\": { \"type\": \"number\" },",
                        "                    \"description\": { \"type\": \"string\" },",
                        "                    \"currency\": { \"type\": \"number\" },",
                        "                    \"mcc\": { \"type\": \"number\" },",
                        "                    \"kind\": { \"type\": \"string\" },",
                        "                    \"catCode\": { \"type\": [\"string\", \"null\"] },",
                        "                    \"splits\": {",
                        "                        \"type\": \"array\",",
                        "                        \"items\": {",
                        "                            \"type\": \"object\",",
                        "                            \"properties\": {",
                        "                                \"splitId\": { \"type\": \"number\" },",
                        "                                \"description\": { \"type\": \"string\" },",
                        "                                \"catCode\": { \"type\": [\"string\", \"null\"] },",
                        "                                \"amount\": { \"type\": \"number\" },",
                        "                                \"transactionId\": { \"type\": \"number\" }",
                        "                            },",
                        "                            \"required\": [\"splitId\", \"description\", \"catCode\", \"amount\", \"transactionId\"]",
                        "                        }",
                        "                    }",
                        "                },",
                        "                \"required\": [\"transactionId\", \"beneficiaryName\", \"date\", \"direction\", \"amount\", \"description\", \"currency\", \"mcc\", \"kind\", \"catCode\", \"splits\"]",
                        "            }",
                        "        }",
                        "    },",
                        "    \"required\": [\"totalCount\", \"pageSize\", \"page\", \"totalPages\", \"sortOrder\", \"sortBy\", \"items\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "44b497c0-d2db-4919-a0eb-591eda9904a5"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              },
              {
                "id": "41478d8b-3bc4-46dc-a202-a9109fb4f4ac",
                "name": "Get Transactions 400",
                "request": {
                  "url": {
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [
                      {
                        "key": "transactionKind",
                        "value": "wdw,pmt"
                      },
                      {
                        "key": "startDate",
                        "value": "2022-11-20"
                      },
                      {
                        "key": "endDate",
                        "value": "2021-11-21"
                      },
                      {
                        "key": "sortBy",
                        "value": "transactionId"
                      },
                      {
                        "key": "sortOrder",
                        "value": "asc"
                      },
                      {
                        "key": "page",
                        "value": "1"
                      },
                      {
                        "key": "pageSize",
                        "value": "10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": []
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b31cbf97-c634-43ca-a22c-5b712f387af4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "b27db14e-4e53-4c2f-bb62-a4069b59511f"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": []
          },
          {
            "id": "a215f86b-ede1-4de0-9c77-3305907422d9",
            "name": "Split Transaction",
            "item": [
              {
                "id": "f4c3ed29-fff1-470a-849f-039d67be0e51",
                "name": "Split Transaction 200",
                "request": {
                  "url": {
                    "path": [
                      "10058284",
                      "split"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"A\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 12.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b968e07-c2ac-47c0-a818-84a8032a7d57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "1e25e17b-9ac8-41a1-a372-4338b2cce499"
                    }
                  }
                ]
              },
              {
                "id": "0102a087-2ccf-45bd-bb75-c8e86af4c31d",
                "name": "Split Transaction 400",
                "request": {
                  "url": {
                    "path": [
                      "10058284",
                      "split"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f91a6fc-1765-4b84-ae50-c91fcb134592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"statusCode\": { \"type\": \"string\"},",
                        "        \"message\": { \"type\": \"string\"},",
                        "        \"errors\": {",
                        "            \"type\": \"array\",",
                        "            \"items\": {",
                        "                \"type\": \"object\",",
                        "                \"properties\": {",
                        "                    \"tag\": { \"type\": \"string\" },",
                        "                    \"error\": { \"type\": \"string\" },",
                        "                    \"message\": { \"type\": \"string\" }",
                        "                },",
                        "                \"required\": [\"tag\", \"error\", \"message\"]",
                        "            }",
                        "        }",
                        "    },",
                        "    \"required\": [\"statusCode\", \"errors\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "6b0a6352-09a1-480a-b0ea-d9559d0cce06"
                    }
                  }
                ]
              },
              {
                "id": "8940d09b-d7f2-419f-901d-962fe4497273",
                "name": "Split Transaction 404",
                "request": {
                  "url": {
                    "path": [
                      "10058285",
                      "split"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3405936c-f41b-40e5-97be-ce4a734cd3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 404\", function () {",
                        "    pm.response.to.have.status(404);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"statusCode\": { \"type\": \"string\"},",
                        "        \"message\": { \"type\": \"string\"},",
                        "        \"errors\": {",
                        "            \"type\": \"array\",",
                        "            \"items\": {",
                        "                \"type\": \"object\",",
                        "                \"properties\": {",
                        "                    \"tag\": { \"type\": \"string\" },",
                        "                    \"error\": { \"type\": \"string\" },",
                        "                    \"message\": { \"type\": \"string\" }",
                        "                },",
                        "                \"required\": [\"tag\", \"error\", \"message\"]",
                        "            }",
                        "        }",
                        "    },",
                        "    \"required\": [\"statusCode\", \"errors\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "467bfa9f-d8e6-44a6-84ad-021ee6ace585"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "1dda16b7-cef8-4865-b54e-928f3de5e2e7",
            "name": "Auto-Categorize Transactions",
            "item": [
              {
                "id": "0071f3a9-cba6-464a-b562-1fe43d2258ae",
                "name": "Auto-Categorize Transaction 200",
                "request": {
                  "url": {
                    "path": [
                      "auto-categorize"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf4ed475-7f4e-4db6-9f46-3a958c7c3674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "1bf70928-f87c-4904-9908-56a9b4d523e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "b1c90193-75cc-422f-b64d-181005789878",
            "name": "Import File",
            "item": [
              {
                "id": "196b142a-472f-42ed-aa27-b2ea89f64844",
                "name": "Import File 200",
                "request": {
                  "url": {
                    "path": [
                      "import"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "key": "formFile",
                        "type": "file",
                        "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "013d4e42-f81d-4cf2-8c68-f8a6420ccf95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                        "});"
                      ],
                      "_lastExecutionId": "cdbf8b92-009a-4a0b-9a7e-db52a1861378"
                    }
                  }
                ]
              },
              {
                "id": "2b0c176c-9436-4bf3-8ba3-79bb9f0396ef",
                "name": "Import File 400",
                "request": {
                  "url": {
                    "path": [
                      "import"
                    ],
                    "host": [
                      "{{server}}{{transactionsUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "disabled": true,
                        "key": "formFile",
                        "type": "file",
                        "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1518aa-9d27-4e86-9aa7-7f6537687ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"statusCode\": { \"type\": \"number\" },",
                        "        \"message\": { \"type\": \"string\" },",
                        "        \"errors\": {",
                        "            \"type\": \"object\",",
                        "            \"properties\": {",
                        "                \"formFile\": {",
                        "                    \"type\": \"array\",",
                        "                    \"items\": {",
                        "                        \"type\": \"string\"",
                        "                    }",
                        "                }",
                        "            },",
                        "            \"required\": [\"formFile\"]",
                        "        }",
                        "    },",
                        "    \"required\": [\"statusCode\", \"message\", \"errors\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                        "});"
                      ],
                      "_lastExecutionId": "4bddefb6-545b-47f8-bba6-f1fb2efc8f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "b8686d94-2d1b-45b4-a994-dc5e9a6e9759",
        "name": "Categories",
        "item": [
          {
            "id": "807fb7f5-bc53-4c9e-82d3-bd9e0277d586",
            "name": "Get Categories",
            "item": [
              {
                "id": "52a88254-f6cb-41e6-974f-9800026018fd",
                "name": "Get Categories 200",
                "request": {
                  "url": {
                    "host": [
                      "{{server}}{{categoriesUri}}"
                    ],
                    "query": [
                      {
                        "key": "parentCode",
                        "value": "B"
                      },
                      {
                        "key": "sortBy",
                        "value": "parentCode"
                      },
                      {
                        "key": "sortOrder",
                        "value": "desc"
                      },
                      {
                        "key": "page",
                        "value": "1"
                      },
                      {
                        "key": "pageSize",
                        "value": "10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": []
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9341a98-012d-4a70-a3c5-9422cbe6932d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"totalCount\": { \"type\": \"number\" },",
                        "        \"pageSize\": { \"type\": \"number\" },",
                        "        \"page\": { \"type\": \"number\" },",
                        "        \"totalPages\": { \"type\": \"number\" },",
                        "        \"sortOrder\": { \"type\": \"number\" },",
                        "        \"sortBy\": { \"type\": \"string\" },",
                        "        \"items\": {",
                        "            \"type\": \"array\",",
                        "            \"items\": {",
                        "                \"type\": \"object\",",
                        "                \"properties\": {",
                        "                    \"codeId\": { \"type\": \"string\" },",
                        "                    \"parentCode\": { \"type\": \"string\" },",
                        "                    \"name\": { \"type\": \"string\" }",
                        "                },",
                        "                \"required\": [\"codeId\", \"parentCode\", \"name\"]",
                        "            }",
                        "        }",
                        "    },",
                        "    \"required\": [\"totalCount\", \"pageSize\", \"page\", \"totalPages\", \"sortOrder\", \"sortBy\", \"items\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "1cffde78-2906-4044-861d-228eb3a153eb"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": []
          },
          {
            "id": "7fad53f5-baa7-4d4b-a850-b30c9a4566c2",
            "name": "Import File",
            "item": [
              {
                "id": "80972be8-c517-45dc-b343-71d6e01d7f0c",
                "name": "Import File 200",
                "request": {
                  "url": {
                    "path": [
                      "import"
                    ],
                    "host": [
                      "{{server}}{{categoriesUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "key": "formFile",
                        "type": "file",
                        "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1aecf6-1e13-4a89-b38f-ded642be6076",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                        "});"
                      ],
                      "_lastExecutionId": "eb1085ee-f0ef-4752-adfe-fa88e4c61e87"
                    }
                  }
                ]
              },
              {
                "id": "042ba362-6be6-4db3-8613-0a10cedf83ea",
                "name": "Import File 400",
                "request": {
                  "url": {
                    "path": [
                      "import"
                    ],
                    "host": [
                      "{{server}}{{categoriesUri}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "disabled": true,
                      "key": "",
                      "value": ""
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "disabled": true,
                        "key": "formFile",
                        "type": "file",
                        "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb0054ab-795a-4b20-84bd-b532a8390bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"statusCode\": { \"type\": \"number\" },",
                        "        \"message\": { \"type\": \"string\" },",
                        "        \"errors\": {",
                        "            \"type\": \"object\",",
                        "            \"properties\": {",
                        "                \"formFile\": {",
                        "                    \"type\": \"array\",",
                        "                    \"items\": {",
                        "                        \"type\": \"string\"",
                        "                    }",
                        "                }",
                        "            },",
                        "            \"required\": [\"formFile\"]",
                        "        }",
                        "    },",
                        "    \"required\": [\"statusCode\", \"message\", \"errors\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                        "});"
                      ],
                      "_lastExecutionId": "790aac1c-e887-45c2-949a-6e68fe5686c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "96b7d969-cdc0-4e31-91bb-53a983273775",
        "name": "Spending Analytics",
        "item": [
          {
            "id": "0df26bc4-f5b7-4c72-b5f8-b4aa3c76f0fb",
            "name": "Get Spending Analytics",
            "item": [
              {
                "id": "3d13f280-5efd-4848-8709-43460479e91d",
                "name": "Get Spending Analytics 200",
                "request": {
                  "url": {
                    "host": [
                      "{{server}}{{spendingAnalyticsUri}}"
                    ],
                    "query": [
                      {
                        "key": "catcode",
                        "value": "C,4"
                      },
                      {
                        "disabled": true,
                        "key": "startDate",
                        "value": "2021-11-20"
                      },
                      {
                        "disabled": true,
                        "key": "endDate",
                        "value": "2021-11-21"
                      },
                      {
                        "disabled": true,
                        "key": "direction",
                        "value": "d"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "disabled": true,
                        "key": "formFile",
                        "type": "file",
                        "src": []
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"groups\": {",
                        "            \"type\": \"array\",",
                        "            \"items\": {",
                        "                \"type\": \"object\",",
                        "                \"properties\": {",
                        "                    \"catcode\": { \"type\": \"string\" },",
                        "                    \"amount\": { \"type\": \"number\" },",
                        "                    \"count\": { \"type\": \"number\" }",
                        "                },",
                        "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                        "            }",
                        "        }",
                        "    },",
                        "    \"required\": [\"groups\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              },
              {
                "id": "fb66852f-fd7b-4b24-87d9-8079fb0c0ff0",
                "name": "Get Spending Analytics 404",
                "request": {
                  "url": {
                    "host": [
                      "{{server}}{{spendingAnalyticsUri}}"
                    ],
                    "query": [
                      {
                        "key": "catcode",
                        "value": "A"
                      },
                      {
                        "disabled": true,
                        "key": "startDate",
                        "value": "2021-11-20"
                      },
                      {
                        "disabled": true,
                        "key": "endDate",
                        "value": "2021-11-21"
                      },
                      {
                        "disabled": true,
                        "key": "direction",
                        "value": "d"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "disabled": true,
                        "key": "formFile",
                        "type": "file",
                        "src": []
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a9d5c9-2bc9-4899-8711-b4224fb416b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 404\", function () {",
                        "    pm.response.to.have.status(404);",
                        "});",
                        "",
                        "const expectedSchema = {",
                        "    \"type\": \"object\",",
                        "    \"properties\": {",
                        "        \"message\": { \"type\": \"string\" }",
                        "    },",
                        "    \"required\": [\"message\"]",
                        "};",
                        "",
                        "pm.test(\"Response has correct schema\", function () {",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                        "});",
                        "",
                        "pm.test(\"Response time is less than 500ms\", function () {",
                        "    pm.expect(pm.response.responseTime).to.be.below(500);",
                        "});"
                      ],
                      "_lastExecutionId": "8b226734-b2d3-4d6c-97e3-31ae0d3867af"
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                }
              }
            ],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "1a24bff7-0299-48f9-a76c-d834c12fad82",
      "name": "Test PFMBackendAPI",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2023-07-25T18:11:45.877Z",
      "postman_exported_using": "Postman/10.16.3"
    },
    "id": "62e1957d-4f10-4119-af62-bec770235f32",
    "name": "PFMBackendAPI Environment",
    "values": [
      {
        "type": "any",
        "value": "http://127.0.0.1:80",
        "key": "server"
      },
      {
        "type": "any",
        "value": "/v1/transactions",
        "key": "transactionsUri"
      },
      {
        "type": "any",
        "value": "/v1/categories",
        "key": "categoriesUri"
      },
      {
        "type": "any",
        "value": "/v1/spending-analytics",
        "key": "spendingAnalyticsUri"
      },
      {
        "type": "any",
        "value": "",
        "key": "testInputExistingValue"
      },
      {
        "type": "any",
        "value": "",
        "key": "testInputNonExistingValue"
      },
      {
        "type": "any",
        "value": "",
        "key": "resourceName"
      }
    ]
  },
  "globals": {
    "id": "3c4ca063-c5ad-4cdd-b25b-eb10d2e275e9",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 45,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 457.2,
      "responseMin": 6,
      "responseMax": 4756,
      "responseSd": 1167.5648847066273,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690308731027,
      "completed": 1690308738102
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 15,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3137e42-2918-49d7-8a3d-1d4183db00be",
          "httpRequestId": "62d21af5-fcaf-4538-9d01-6c69af1ae560"
        },
        "item": {
          "id": "5e501e1d-8bf8-4e75-b30e-1571ba0e720a",
          "name": "Categorize Transaction 200",
          "request": {
            "url": {
              "path": [
                "10023191",
                "categorize"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"catcode\": \"4\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fd888f6-da07-4565-8082-bfa5c26d1408",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "94bf6e8b-905d-4a5d-9c8b-86610326d93c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "10023191",
              "categorize"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4214302c-31ad-46b6-b0dd-39f9f67d897e",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "22",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"catcode\": \"4\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "07aceee3-9093-4c50-a1b3-b51ec8437ce7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 825,
          "responseSize": 47
        },
        "id": "5e501e1d-8bf8-4e75-b30e-1571ba0e720a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response time is less than 500ms",
              "message": "expected 825 to be below 500",
              "stack": "AssertionError: expected 825 to be below 500\n   at Object.eval sandbox-script.js:3:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "104763fb-ae95-4309-90e9-0bb881dd6e1e",
          "length": 15,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4653eb3d-c366-4001-a7a0-cb57f8b5b37a"
        },
        "item": {
          "id": "e9ef95d6-4d70-4fcd-b77b-a967133381b2",
          "name": "Categorize Transaction 404",
          "request": {
            "url": {
              "path": [
                "10023191",
                "categorize"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"catcode\": \"4555\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2722f033-f44a-4354-83e6-d32d864e03d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "2d49bb92-b480-477a-8439-75debaf8dc24"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "10023191",
              "categorize"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "55643407-a778-421a-a10f-1fbb03d2fb94",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "25",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"catcode\": \"4555\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "946b4fa4-b252-43ee-b5aa-f0e81571c190",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 49,
          "responseSize": 33
        },
        "id": "e9ef95d6-4d70-4fcd-b77b-a967133381b2",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9ac5d020-3226-48a1-9736-4f579d92440b",
          "length": 15,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e95c7c56-dcc0-4b40-8d43-ac9b4601afc0"
        },
        "item": {
          "id": "d7ab2158-6bfa-4254-bca3-bb33cfbf2fe8",
          "name": "Get Transactions 200",
          "request": {
            "url": {
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [
                {
                  "key": "transactionKind",
                  "value": "wdw,pmt"
                },
                {
                  "disabled": true,
                  "key": "startDate",
                  "value": "2021-11-20"
                },
                {
                  "disabled": true,
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "key": "sortBy",
                  "value": "transactionId"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7c959e68-d710-4af0-8a4d-93335eb942b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"totalCount\": { \"type\": \"number\" },",
                  "        \"pageSize\": { \"type\": \"number\" },",
                  "        \"page\": { \"type\": \"number\" },",
                  "        \"totalPages\": { \"type\": \"number\" },",
                  "        \"sortOrder\": { \"type\": \"number\" },",
                  "        \"sortBy\": { \"type\": \"string\" },",
                  "        \"items\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"transactionId\": { \"type\": \"number\" },",
                  "                    \"beneficiaryName\": { \"type\": \"string\" },",
                  "                    \"date\": { \"type\": \"string\", \"format\": \"date-time\" },",
                  "                    \"direction\": { \"type\": \"string\" },",
                  "                    \"amount\": { \"type\": \"number\" },",
                  "                    \"description\": { \"type\": \"string\" },",
                  "                    \"currency\": { \"type\": \"number\" },",
                  "                    \"mcc\": { \"type\": \"number\" },",
                  "                    \"kind\": { \"type\": \"string\" },",
                  "                    \"catCode\": { \"type\": [\"string\", \"null\"] },",
                  "                    \"splits\": {",
                  "                        \"type\": \"array\",",
                  "                        \"items\": {",
                  "                            \"type\": \"object\",",
                  "                            \"properties\": {",
                  "                                \"splitId\": { \"type\": \"number\" },",
                  "                                \"description\": { \"type\": \"string\" },",
                  "                                \"catCode\": { \"type\": [\"string\", \"null\"] },",
                  "                                \"amount\": { \"type\": \"number\" },",
                  "                                \"transactionId\": { \"type\": \"number\" }",
                  "                            },",
                  "                            \"required\": [\"splitId\", \"description\", \"catCode\", \"amount\", \"transactionId\"]",
                  "                        }",
                  "                    }",
                  "                },",
                  "                \"required\": [\"transactionId\", \"beneficiaryName\", \"date\", \"direction\", \"amount\", \"description\", \"currency\", \"mcc\", \"kind\", \"catCode\", \"splits\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"totalCount\", \"pageSize\", \"page\", \"totalPages\", \"sortOrder\", \"sortBy\", \"items\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "44b497c0-d2db-4919-a0eb-591eda9904a5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "transactionKind",
                "value": "wdw,pmt"
              },
              {
                "key": "sortBy",
                "value": "transactionId"
              },
              {
                "key": "sortOrder",
                "value": "asc"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "pageSize",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c77c40c3-9fad-456d-b978-fc73441c21c4",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": []
          }
        },
        "response": {
          "id": "51de77f6-e036-4601-9c35-1c078492e73e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              67,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              50,
              48,
              51,
              44,
              34,
              112,
              97,
              103,
              101,
              83,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              50,
              49,
              44,
              34,
              115,
              111,
              114,
              116,
              79,
              114,
              100,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              115,
              111,
              114,
              116,
              66,
              121,
              34,
              58,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              48,
              50,
              51,
              49,
              57,
              49,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              100,
              111,
              98,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              56,
              45,
              50,
              53,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              56,
              46,
              50,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              86,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              53,
              48,
              52,
              53,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              48,
              52,
              55,
              53,
              50,
              53,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              108,
              101,
              57,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              55,
              45,
              49,
              51,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              56,
              46,
              49,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              108,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              32,
              98,
              105,
              108,
              108,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              67,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              48,
              53,
              56,
              50,
              56,
              52,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              114,
              97,
              110,
              103,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              56,
              45,
              49,
              54,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              52,
              46,
              53,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              101,
              116,
              32,
              98,
              105,
              108,
              108,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              67,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              123,
              34,
              115,
              112,
              108,
              105,
              116,
              73,
              100,
              34,
              58,
              49,
              52,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              65,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              50,
              46,
              53,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              48,
              53,
              56,
              50,
              56,
              52,
              125,
              44,
              123,
              34,
              115,
              112,
              108,
              105,
              116,
              73,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              65,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              50,
              44,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              48,
              53,
              56,
              50,
              56,
              52,
              125,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              49,
              48,
              56,
              53,
              57,
              52,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              72,
              111,
              109,
              101,
              32,
              99,
              108,
              101,
              97,
              110,
              105,
              110,
              103,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              49,
              48,
              45,
              50,
              48,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              52,
              53,
              46,
              57,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              108,
              101,
              97,
              110,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              74,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              49,
              50,
              52,
              54,
              48,
              51,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              111,
              109,
              99,
              97,
              115,
              116,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              54,
              45,
              50,
              54,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              53,
              46,
              55,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              108,
              101,
              118,
              105,
              115,
              105,
              111,
              110,
              32,
              98,
              105,
              108,
              108,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              67,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              49,
              54,
              54,
              55,
              50,
              57,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              101,
              116,
              32,
              104,
              111,
              116,
              101,
              108,
              32,
              72,
              97,
              112,
              112,
              121,
              32,
              68,
              111,
              103,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              52,
              45,
              50,
              49,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              48,
              48,
              46,
              54,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              77,
              111,
              110,
              116,
              104,
              108,
              121,
              32,
              115,
              116,
              97,
              121,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              53,
              57,
              57,
              53,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              79,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              50,
              52,
              56,
              52,
              50,
              54,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              105,
              108,
              108,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              49,
              49,
              45,
              49,
              56,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              52,
              56,
              46,
              55,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              108,
              108,
              111,
              119,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              51,
              50,
              54,
              54,
              52,
              55,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              105,
              108,
              108,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              49,
              49,
              45,
              49,
              54,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              48,
              46,
              53,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              108,
              108,
              111,
              119,
              97,
              110,
              99,
              101,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              51,
              54,
              52,
              56,
              50,
              48,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              98,
              97,
              114,
              98,
              101,
              114,
              115,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              50,
              46,
              55,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              72,
              97,
              105,
              114,
              99,
              117,
              116,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              55,
              50,
              51,
              48,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              49,
              48,
              52,
              50,
              49,
              54,
              52,
              54,
              44,
              34,
              98,
              101,
              110,
              101,
              102,
              105,
              99,
              105,
              97,
              114,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              105,
              116,
              121,
              32,
              112,
              97,
              114,
              107,
              105,
              110,
              103,
              115,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              49,
              45,
              48,
              53,
              45,
              48,
              53,
              84,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              43,
              48,
              48,
              58,
              48,
              48,
              34,
              44,
              34,
              100,
              105,
              114,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              50,
              46,
              56,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              97,
              114,
              107,
              105,
              110,
              103,
              32,
              102,
              101,
              101,
              34,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              99,
              121,
              34,
              58,
              48,
              44,
              34,
              109,
              99,
              99,
              34,
              58,
              55,
              53,
              50,
              51,
              44,
              34,
              107,
              105,
              110,
              100,
              34,
              58,
              34,
              112,
              109,
              116,
              34,
              44,
              34,
              99,
              97,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              70,
              34,
              44,
              34,
              115,
              112,
              108,
              105,
              116,
              115,
              34,
              58,
              91,
              93,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 236,
          "responseSize": 2398
        },
        "id": "d7ab2158-6bfa-4254-bca3-bb33cfbf2fe8",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dd9f0540-913b-4724-b47d-2acfabae6e4b",
          "length": 15,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "027dbdb1-844f-497f-b6ca-bec77d0df6df"
        },
        "item": {
          "id": "41478d8b-3bc4-46dc-a202-a9109fb4f4ac",
          "name": "Get Transactions 400",
          "request": {
            "url": {
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [
                {
                  "key": "transactionKind",
                  "value": "wdw,pmt"
                },
                {
                  "key": "startDate",
                  "value": "2022-11-20"
                },
                {
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "key": "sortBy",
                  "value": "transactionId"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b31cbf97-c634-43ca-a22c-5b712f387af4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "b27db14e-4e53-4c2f-bb62-a4069b59511f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "transactionKind",
                "value": "wdw,pmt"
              },
              {
                "key": "startDate",
                "value": "2022-11-20"
              },
              {
                "key": "endDate",
                "value": "2021-11-21"
              },
              {
                "key": "sortBy",
                "value": "transactionId"
              },
              {
                "key": "sortOrder",
                "value": "asc"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "pageSize",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6693a903-1cdf-4da6-84ec-be3113bd7404",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": []
          }
        },
        "response": {
          "id": "d75dbfeb-37f6-4f1a-a8f4-91c1085b822a",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              115,
              116,
              97,
              114,
              116,
              32,
              100,
              97,
              116,
              101,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              111,
              110,
              32,
              111,
              114,
              32,
              98,
              101,
              102,
              111,
              114,
              101,
              32,
              116,
              104,
              101,
              32,
              101,
              110,
              100,
              32,
              100,
              97,
              116,
              101,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              97,
              100,
              106,
              117,
              115,
              116,
              32,
              121,
              111,
              117,
              114,
              32,
              100,
              97,
              116,
              101,
              115,
              32,
              97,
              99,
              99,
              111,
              114,
              100,
              105,
              110,
              103,
              108,
              121,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 103
        },
        "id": "41478d8b-3bc4-46dc-a202-a9109fb4f4ac",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4ac83dea-4251-4773-9bca-0932f9a4dba6",
          "length": 15,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d9306ad-3642-41b2-a2a7-13044cca71ac"
        },
        "item": {
          "id": "f4c3ed29-fff1-470a-849f-039d67be0e51",
          "name": "Split Transaction 200",
          "request": {
            "url": {
              "path": [
                "10058284",
                "split"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"A\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 12.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b968e07-c2ac-47c0-a818-84a8032a7d57",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "1e25e17b-9ac8-41a1-a372-4338b2cce499"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "10058284",
              "split"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "531e762c-6393-4e88-9534-3cce36d7502b",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "193",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"A\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 12.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "77478b4d-30ed-4928-b20a-83a37d185716",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              112,
              108,
              105,
              116,
              115,
              32,
              115,
              97,
              118,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 203,
          "responseSize": 52
        },
        "id": "f4c3ed29-fff1-470a-849f-039d67be0e51",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4a51aad4-3497-4908-9b57-4df3bd55b7bd",
          "length": 15,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "808b9dc4-b751-4c97-9aa0-47478458cf2e"
        },
        "item": {
          "id": "0102a087-2ccf-45bd-bb75-c8e86af4c31d",
          "name": "Split Transaction 400",
          "request": {
            "url": {
              "path": [
                "10058284",
                "split"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f91a6fc-1765-4b84-ae50-c91fcb134592",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"statusCode\": { \"type\": \"string\"},",
                  "        \"message\": { \"type\": \"string\"},",
                  "        \"errors\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"tag\": { \"type\": \"string\" },",
                  "                    \"error\": { \"type\": \"string\" },",
                  "                    \"message\": { \"type\": \"string\" }",
                  "                },",
                  "                \"required\": [\"tag\", \"error\", \"message\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"statusCode\", \"errors\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "6b0a6352-09a1-480a-b0ea-d9559d0cce06"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "10058284",
              "split"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2946813c-976b-4b32-b6a4-d21ae9842043",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "195",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "16d65a88-8588-4506-834c-862728ebf0e3",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              48,
              48,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              101,
              32,
              111,
              114,
              32,
              109,
              111,
              114,
              101,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              32,
              101,
              114,
              114,
              111,
              114,
              115,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              97,
              103,
              34,
              58,
              34,
              99,
              97,
              116,
              99,
              111,
              100,
              101,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              45,
              105,
              110,
              112,
              117,
              116,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              100,
              32,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              32,
              99,
              111,
              100,
              101,
              58,
              32,
              39,
              65,
              100,
              39,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              33,
              34,
              125,
              44,
              123,
              34,
              116,
              97,
              103,
              34,
              58,
              34,
              97,
              109,
              111,
              117,
              110,
              116,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              45,
              115,
              112,
              108,
              105,
              116,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              115,
              117,
              109,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              112,
              108,
              105,
              116,
              32,
              97,
              109,
              111,
              117,
              110,
              116,
              115,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              97,
              109,
              111,
              117,
              110,
              116,
              46,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 305
        },
        "id": "0102a087-2ccf-45bd-bb75-c8e86af4c31d",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9a518389-5322-49cf-8834-7d83e5913f87",
          "length": 15,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5d5ee62c-0719-46d6-bd2a-3d96f565a34e"
        },
        "item": {
          "id": "8940d09b-d7f2-419f-901d-962fe4497273",
          "name": "Split Transaction 404",
          "request": {
            "url": {
              "path": [
                "10058285",
                "split"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3405936c-f41b-40e5-97be-ce4a734cd3b2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"statusCode\": { \"type\": \"string\"},",
                  "        \"message\": { \"type\": \"string\"},",
                  "        \"errors\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"tag\": { \"type\": \"string\" },",
                  "                    \"error\": { \"type\": \"string\" },",
                  "                    \"message\": { \"type\": \"string\" }",
                  "                },",
                  "                \"required\": [\"tag\", \"error\", \"message\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"statusCode\", \"errors\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "467bfa9f-d8e6-44a6-84ad-021ee6ace585"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "10058285",
              "split"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3df98690-aa75-4c5f-b149-1d3dd1322fdf",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "195",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"splits\": [\n    {\n      \"catcode\": \"Ad\",\n      \"amount\": 12,\n      \"description\": \"string\"\n    },\n     {\n      \"catcode\": \"A\",\n      \"amount\": 124.5,\n      \"description\": \"string\"\n    }\n  ]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "227311c7-06c7-47f0-9134-6b72f853b77a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              48,
              52,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              101,
              32,
              111,
              114,
              32,
              109,
              111,
              114,
              101,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              32,
              101,
              114,
              114,
              111,
              114,
              115,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              97,
              103,
              34,
              58,
              34,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              45,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              100,
              32,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              105,
              100,
              58,
              32,
              39,
              49,
              48,
              48,
              53,
              56,
              50,
              56,
              53,
              39,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              101,
              120,
              105,
              115,
              116,
              33,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 207
        },
        "id": "8940d09b-d7f2-419f-901d-962fe4497273",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "16a032b8-3edf-41e9-89dd-2fe92b502824",
          "length": 15,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d7d9893-322f-48ad-a0e1-643bcc25967f"
        },
        "item": {
          "id": "0071f3a9-cba6-464a-b562-1fe43d2258ae",
          "name": "Auto-Categorize Transaction 200",
          "request": {
            "url": {
              "path": [
                "auto-categorize"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bf4ed475-7f4e-4db6-9f46-3a958c7c3674",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "1bf70928-f87c-4904-9908-56a9b4d523e1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "auto-categorize"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "108b3f67-0719-4459-bf54-997ad0802ad0",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST"
        },
        "response": {
          "id": "dbdb2e79-f152-4909-a66c-23dbb5054549",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:11 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              84,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              119,
              101,
              114,
              101,
              32,
              97,
              117,
              116,
              111,
              32,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 146,
          "responseSize": 62
        },
        "id": "0071f3a9-cba6-464a-b562-1fe43d2258ae",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8819989c-7503-4a17-b9f7-e598d6438a9b",
          "length": 15,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bb0716af-4f0d-48bb-ac15-d2bbea9090f9"
        },
        "item": {
          "id": "196b142a-472f-42ed-aa27-b2ea89f64844",
          "name": "Import File 200",
          "request": {
            "url": {
              "path": [
                "import"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "formFile",
                  "type": "file",
                  "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "013d4e42-f81d-4cf2-8c68-f8a6420ccf95",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});"
                ],
                "_lastExecutionId": "cdbf8b92-009a-4a0b-9a7e-db52a1861378"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "import"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2f58e0b8-1068-485a-9cc2-c0470317cd51",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "82381",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "formFile",
                "type": "file",
                "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
              }
            ]
          }
        },
        "response": {
          "id": "ff5918d3-d7a8-424e-814b-577250ec7fc9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:16 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              33,
              32,
              84,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              105,
              109,
              112,
              111,
              114,
              116,
              101,
              100,
              58,
              32,
              48,
              32,
              32,
              97,
              110,
              100,
              32,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              58,
              32,
              56,
              48,
              49,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 4756,
          "responseSize": 79
        },
        "id": "196b142a-472f-42ed-aa27-b2ea89f64844",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "831021a0-0118-4ce5-a509-7a43681ee440",
          "length": 15,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f1be6da7-c37c-4ee4-93f3-3cee99217a79"
        },
        "item": {
          "id": "2b0c176c-9436-4bf3-8ba3-79bb9f0396ef",
          "name": "Import File 400",
          "request": {
            "url": {
              "path": [
                "import"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e1518aa-9d27-4e86-9aa7-7f6537687ec0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"statusCode\": { \"type\": \"number\" },",
                  "        \"message\": { \"type\": \"string\" },",
                  "        \"errors\": {",
                  "            \"type\": \"object\",",
                  "            \"properties\": {",
                  "                \"formFile\": {",
                  "                    \"type\": \"array\",",
                  "                    \"items\": {",
                  "                        \"type\": \"string\"",
                  "                    }",
                  "                }",
                  "            },",
                  "            \"required\": [\"formFile\"]",
                  "        }",
                  "    },",
                  "    \"required\": [\"statusCode\", \"message\", \"errors\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "_lastExecutionId": "4bddefb6-545b-47f8-bba6-f1fb2efc8f0a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "transactions",
              "import"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4e39b291-783d-4e69-be6e-f45915ce861f",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "disabled": true,
                "key": "formFile",
                "type": "file",
                "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/transactions.csv"
              }
            ]
          }
        },
        "response": {
          "id": "efdedef4-bba7-41db-a847-b44397888325",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:16 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              48,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              101,
              32,
              111,
              114,
              32,
              109,
              111,
              114,
              101,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              115,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              114,
              109,
              70,
              105,
              108,
              101,
              34,
              58,
              91,
              34,
              84,
              104,
              101,
              32,
              102,
              111,
              114,
              109,
              70,
              105,
              108,
              101,
              32,
              102,
              105,
              101,
              108,
              100,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              34,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 128
        },
        "id": "2b0c176c-9436-4bf3-8ba3-79bb9f0396ef",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7d9addd8-14cf-411b-99c2-828387524dcc",
          "length": 15,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c21750b-e80e-4dff-b4f8-36be704b02e3"
        },
        "item": {
          "id": "52a88254-f6cb-41e6-974f-9800026018fd",
          "name": "Get Categories 200",
          "request": {
            "url": {
              "host": [
                "{{server}}{{categoriesUri}}"
              ],
              "query": [
                {
                  "key": "parentCode",
                  "value": "B"
                },
                {
                  "key": "sortBy",
                  "value": "parentCode"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9341a98-012d-4a70-a3c5-9422cbe6932d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"totalCount\": { \"type\": \"number\" },",
                  "        \"pageSize\": { \"type\": \"number\" },",
                  "        \"page\": { \"type\": \"number\" },",
                  "        \"totalPages\": { \"type\": \"number\" },",
                  "        \"sortOrder\": { \"type\": \"number\" },",
                  "        \"sortBy\": { \"type\": \"string\" },",
                  "        \"items\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"codeId\": { \"type\": \"string\" },",
                  "                    \"parentCode\": { \"type\": \"string\" },",
                  "                    \"name\": { \"type\": \"string\" }",
                  "                },",
                  "                \"required\": [\"codeId\", \"parentCode\", \"name\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"totalCount\", \"pageSize\", \"page\", \"totalPages\", \"sortOrder\", \"sortBy\", \"items\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "1cffde78-2906-4044-861d-228eb3a153eb"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "categories"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "parentCode",
                "value": "B"
              },
              {
                "key": "sortBy",
                "value": "parentCode"
              },
              {
                "key": "sortOrder",
                "value": "desc"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "pageSize",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "516296cc-77f3-4e0e-9466-20e954f7849d",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": []
          }
        },
        "response": {
          "id": "2c56de40-2fe6-4baa-bd64-866bf91b1835",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:16 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              67,
              111,
              117,
              110,
              116,
              34,
              58,
              55,
              44,
              34,
              112,
              97,
              103,
              101,
              83,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              115,
              111,
              114,
              116,
              79,
              114,
              100,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              115,
              111,
              114,
              116,
              66,
              121,
              34,
              58,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              116,
              104,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              49,
              48,
              54,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              86,
              97,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              50,
              48,
              50,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              111,
              32,
              73,
              110,
              115,
              117,
              114,
              97,
              110,
              99,
              101,
              32,
              84,
              101,
              115,
              116,
              105,
              110,
              103,
              49,
              50,
              51,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              51,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              117,
              116,
              111,
              32,
              76,
              101,
              97,
              115,
              105,
              110,
              103,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              52,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              71,
              97,
              115,
              32,
              38,
              32,
              70,
              117,
              101,
              108,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              53,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              107,
              105,
              110,
              103,
              34,
              125,
              44,
              123,
              34,
              99,
              111,
              100,
              101,
              73,
              100,
              34,
              58,
              34,
              55,
              34,
              44,
              34,
              112,
              97,
              114,
              101,
              110,
              116,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              66,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              38,
              32,
              80,
              97,
              114,
              116,
              115,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 83,
          "responseSize": 480
        },
        "id": "52a88254-f6cb-41e6-974f-9800026018fd",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bb80ddb4-893e-475c-9b6f-6d3ea95fe8ee",
          "length": 15,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa041559-310d-4000-b719-b3e983814938"
        },
        "item": {
          "id": "80972be8-c517-45dc-b343-71d6e01d7f0c",
          "name": "Import File 200",
          "request": {
            "url": {
              "path": [
                "import"
              ],
              "host": [
                "{{server}}{{categoriesUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "formFile",
                  "type": "file",
                  "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b1aecf6-1e13-4a89-b38f-ded642be6076",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "_lastExecutionId": "eb1085ee-f0ef-4752-adfe-fa88e4c61e87"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "categories",
              "import"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f86944b0-813a-4885-b2d6-c49a5276385f",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "1674",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "formFile",
                "type": "file",
                "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
              }
            ]
          }
        },
        "response": {
          "id": "b63ef983-4cbe-46e8-a865-24720f387cad",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:17 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              33,
              32,
              67,
              97,
              116,
              101,
              103,
              111,
              114,
              105,
              101,
              115,
              32,
              105,
              109,
              112,
              111,
              114,
              116,
              101,
              100,
              58,
              32,
              48,
              32,
              32,
              97,
              110,
              100,
              32,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              105,
              101,
              115,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              58,
              32,
              48,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 378,
          "responseSize": 73
        },
        "id": "80972be8-c517-45dc-b343-71d6e01d7f0c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a0c7692a-af97-4a2e-91cd-721366a5a514",
          "length": 15,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "34c5e729-01c2-43c4-865d-c6f962cf620d"
        },
        "item": {
          "id": "042ba362-6be6-4db3-8613-0a10cedf83ea",
          "name": "Import File 400",
          "request": {
            "url": {
              "path": [
                "import"
              ],
              "host": [
                "{{server}}{{categoriesUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb0054ab-795a-4b20-84bd-b532a8390bbc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"statusCode\": { \"type\": \"number\" },",
                  "        \"message\": { \"type\": \"string\" },",
                  "        \"errors\": {",
                  "            \"type\": \"object\",",
                  "            \"properties\": {",
                  "                \"formFile\": {",
                  "                    \"type\": \"array\",",
                  "                    \"items\": {",
                  "                        \"type\": \"string\"",
                  "                    }",
                  "                }",
                  "            },",
                  "            \"required\": [\"formFile\"]",
                  "        }",
                  "    },",
                  "    \"required\": [\"statusCode\", \"message\", \"errors\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "_lastExecutionId": "790aac1c-e887-45c2-949a-6e68fe5686c1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "categories",
              "import"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "94778dda-e7b9-4dbd-8c93-1235475dd828",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "disabled": true,
                "key": "formFile",
                "type": "file",
                "src": "/Users/aleksandranikolovska/Desktop/PFM-ASEE/pfm/PFMBackendAPI/resources/categories.csv"
              }
            ]
          }
        },
        "response": {
          "id": "dff1b145-60a9-4b98-a926-82236d0d23a3",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:17 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              67,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              48,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              110,
              101,
              32,
              111,
              114,
              32,
              109,
              111,
              114,
              101,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              115,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              114,
              109,
              70,
              105,
              108,
              101,
              34,
              58,
              91,
              34,
              84,
              104,
              101,
              32,
              102,
              111,
              114,
              109,
              70,
              105,
              108,
              101,
              32,
              102,
              105,
              101,
              108,
              100,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              34,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 128
        },
        "id": "042ba362-6be6-4db3-8613-0a10cedf83ea",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4a30d9c6-8c64-4950-af59-9e4c4ca2ee11",
          "length": 15,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c9e0836-283c-4024-9d24-712ebd9758b6"
        },
        "item": {
          "id": "3d13f280-5efd-4848-8709-43460479e91d",
          "name": "Get Spending Analytics 200",
          "request": {
            "url": {
              "host": [
                "{{server}}{{spendingAnalyticsUri}}"
              ],
              "query": [
                {
                  "key": "catcode",
                  "value": "C,4"
                },
                {
                  "disabled": true,
                  "key": "startDate",
                  "value": "2021-11-20"
                },
                {
                  "disabled": true,
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "disabled": true,
                  "key": "direction",
                  "value": "d"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": []
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"groups\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"catcode\": { \"type\": \"string\" },",
                  "                    \"amount\": { \"type\": \"number\" },",
                  "                    \"count\": { \"type\": \"number\" }",
                  "                },",
                  "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"groups\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "spending-analytics"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "catcode",
                "value": "C,4"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "954fdaf8-4857-4260-9b07-63fb4f12499c",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "disabled": true,
                "key": "formFile",
                "type": "file",
                "src": []
              }
            ]
          }
        },
        "response": {
          "id": "09a8fbc7-d377-4521-949d-b0cbd05ec372",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:17 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              32,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              119,
              101,
              114,
              101,
              32,
              102,
              111,
              117,
              110,
              100,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 41
        },
        "id": "3d13f280-5efd-4848-8709-43460479e91d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:14)"
            }
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has correct schema",
              "message": "expected false to be true",
              "stack": "AssertionError: expected false to be true\n   at Object.eval sandbox-script.js:2:14)"
            }
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "250e5ef3-dec6-4442-82ff-c18aeb969e2f",
          "length": 15,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0609290c-af80-4c88-b191-774f75cb7a19"
        },
        "item": {
          "id": "fb66852f-fd7b-4b24-87d9-8079fb0c0ff0",
          "name": "Get Spending Analytics 404",
          "request": {
            "url": {
              "host": [
                "{{server}}{{spendingAnalyticsUri}}"
              ],
              "query": [
                {
                  "key": "catcode",
                  "value": "A"
                },
                {
                  "disabled": true,
                  "key": "startDate",
                  "value": "2021-11-20"
                },
                {
                  "disabled": true,
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "disabled": true,
                  "key": "direction",
                  "value": "d"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": []
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "06a9d5c9-2bc9-4899-8711-b4224fb416b0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "8b226734-b2d3-4d6c-97e3-31ae0d3867af"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "80",
            "path": [
              "v1",
              "spending-analytics"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "catcode",
                "value": "A"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6e46a5f6-36a6-43d8-bcb7-a7f6edde63f6",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:80",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "disabled": true,
                "key": "formFile",
                "type": "file",
                "src": []
              }
            ]
          }
        },
        "response": {
          "id": "539624d0-d363-4320-8f91-e5ca7b84e4d7",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Tue, 25 Jul 2023 18:12:17 GMT"
            },
            {
              "key": "Server",
              "value": "Kestrel"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              32,
              116,
              114,
              97,
              110,
              115,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              119,
              101,
              114,
              101,
              32,
              102,
              111,
              117,
              110,
              100,
              33,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 41
        },
        "id": "fb66852f-fd7b-4b24-87d9-8079fb0c0ff0",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          },
          {
            "assertion": "Response has correct schema",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 4177
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response time is less than 500ms",
          "message": "expected 825 to be below 500",
          "stack": "AssertionError: expected 825 to be below 500\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "28c7827e89d4c1c3910efb13659794a0",
          "id": "167edaf1-369e-43e1-9845-2814b3ccaee4",
          "timestamp": 1690308731879,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "5e501e1d-8bf8-4e75-b30e-1571ba0e720a",
          "name": "Categorize Transaction 200",
          "request": {
            "url": {
              "path": [
                "10023191",
                "categorize"
              ],
              "host": [
                "{{server}}{{transactionsUri}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "",
                "value": ""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"catcode\": \"4\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fd888f6-da07-4565-8082-bfa5c26d1408",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"message\": { \"type\": \"string\" }",
                  "    },",
                  "    \"required\": [\"message\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "94bf6e8b-905d-4a5d-9c8b-86610326d93c"
              }
            }
          ]
        },
        "parent": {
          "id": "f4e03a3b-5cd5-491d-80f2-30bced314b66",
          "name": "Categorize Transaction",
          "item": [
            {
              "id": "5e501e1d-8bf8-4e75-b30e-1571ba0e720a",
              "name": "Categorize Transaction 200",
              "request": {
                "url": {
                  "path": [
                    "10023191",
                    "categorize"
                  ],
                  "host": [
                    "{{server}}{{transactionsUri}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "",
                    "value": ""
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"catcode\": \"4\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fd888f6-da07-4565-8082-bfa5c26d1408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"message\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"message\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "94bf6e8b-905d-4a5d-9c8b-86610326d93c"
                  }
                }
              ]
            },
            {
              "id": "e9ef95d6-4d70-4fcd-b77b-a967133381b2",
              "name": "Categorize Transaction 404",
              "request": {
                "url": {
                  "path": [
                    "10023191",
                    "categorize"
                  ],
                  "host": [
                    "{{server}}{{transactionsUri}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "",
                    "value": ""
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"catcode\": \"4555\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2722f033-f44a-4354-83e6-d32d864e03d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"message\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"message\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "2d49bb92-b480-477a-8439-75debaf8dc24"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 15,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3137e42-2918-49d7-8a3d-1d4183db00be",
          "httpRequestId": "62d21af5-fcaf-4538-9d01-6c69af1ae560",
          "scriptId": "3fd888f6-da07-4565-8082-bfa5c26d1408",
          "execution": "94bf6e8b-905d-4a5d-9c8b-86610326d93c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "8d356b83396260e1bdb035ac0d78ac8d",
          "id": "bad05b09-e27c-4cdc-8596-9a4afc98fa77",
          "timestamp": 1690308738073,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3d13f280-5efd-4848-8709-43460479e91d",
          "name": "Get Spending Analytics 200",
          "request": {
            "url": {
              "host": [
                "{{server}}{{spendingAnalyticsUri}}"
              ],
              "query": [
                {
                  "key": "catcode",
                  "value": "C,4"
                },
                {
                  "disabled": true,
                  "key": "startDate",
                  "value": "2021-11-20"
                },
                {
                  "disabled": true,
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "disabled": true,
                  "key": "direction",
                  "value": "d"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": []
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"groups\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"catcode\": { \"type\": \"string\" },",
                  "                    \"amount\": { \"type\": \"number\" },",
                  "                    \"count\": { \"type\": \"number\" }",
                  "                },",
                  "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"groups\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "id": "0df26bc4-f5b7-4c72-b5f8-b4aa3c76f0fb",
          "name": "Get Spending Analytics",
          "item": [
            {
              "id": "3d13f280-5efd-4848-8709-43460479e91d",
              "name": "Get Spending Analytics 200",
              "request": {
                "url": {
                  "host": [
                    "{{server}}{{spendingAnalyticsUri}}"
                  ],
                  "query": [
                    {
                      "key": "catcode",
                      "value": "C,4"
                    },
                    {
                      "disabled": true,
                      "key": "startDate",
                      "value": "2021-11-20"
                    },
                    {
                      "disabled": true,
                      "key": "endDate",
                      "value": "2021-11-21"
                    },
                    {
                      "disabled": true,
                      "key": "direction",
                      "value": "d"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "disabled": true,
                      "key": "formFile",
                      "type": "file",
                      "src": []
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"groups\": {",
                      "            \"type\": \"array\",",
                      "            \"items\": {",
                      "                \"type\": \"object\",",
                      "                \"properties\": {",
                      "                    \"catcode\": { \"type\": \"string\" },",
                      "                    \"amount\": { \"type\": \"number\" },",
                      "                    \"count\": { \"type\": \"number\" }",
                      "                },",
                      "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                      "            }",
                      "        }",
                      "    },",
                      "    \"required\": [\"groups\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "fb66852f-fd7b-4b24-87d9-8079fb0c0ff0",
              "name": "Get Spending Analytics 404",
              "request": {
                "url": {
                  "host": [
                    "{{server}}{{spendingAnalyticsUri}}"
                  ],
                  "query": [
                    {
                      "key": "catcode",
                      "value": "A"
                    },
                    {
                      "disabled": true,
                      "key": "startDate",
                      "value": "2021-11-20"
                    },
                    {
                      "disabled": true,
                      "key": "endDate",
                      "value": "2021-11-21"
                    },
                    {
                      "disabled": true,
                      "key": "direction",
                      "value": "d"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "disabled": true,
                      "key": "formFile",
                      "type": "file",
                      "src": []
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "06a9d5c9-2bc9-4899-8711-b4224fb416b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"message\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"message\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "8b226734-b2d3-4d6c-97e3-31ae0d3867af"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4a30d9c6-8c64-4950-af59-9e4c4ca2ee11",
          "length": 15,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c9e0836-283c-4024-9d24-712ebd9758b6",
          "scriptId": "38295899-764a-4ffb-ae9e-dc4a70df861f",
          "execution": "9e640d3d-d873-4457-a463-091462e676e5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has correct schema",
          "message": "expected false to be true",
          "stack": "AssertionError: expected false to be true\n   at Object.eval sandbox-script.js:2:14)",
          "checksum": "0c55062512233dea3f56dbee4186e05b",
          "id": "4211c7eb-f7f0-46bd-9061-9a04c010f95e",
          "timestamp": 1690308738074,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "3d13f280-5efd-4848-8709-43460479e91d",
          "name": "Get Spending Analytics 200",
          "request": {
            "url": {
              "host": [
                "{{server}}{{spendingAnalyticsUri}}"
              ],
              "query": [
                {
                  "key": "catcode",
                  "value": "C,4"
                },
                {
                  "disabled": true,
                  "key": "startDate",
                  "value": "2021-11-20"
                },
                {
                  "disabled": true,
                  "key": "endDate",
                  "value": "2021-11-21"
                },
                {
                  "disabled": true,
                  "key": "direction",
                  "value": "d"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "disabled": true,
                  "key": "formFile",
                  "type": "file",
                  "src": []
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const expectedSchema = {",
                  "    \"type\": \"object\",",
                  "    \"properties\": {",
                  "        \"groups\": {",
                  "            \"type\": \"array\",",
                  "            \"items\": {",
                  "                \"type\": \"object\",",
                  "                \"properties\": {",
                  "                    \"catcode\": { \"type\": \"string\" },",
                  "                    \"amount\": { \"type\": \"number\" },",
                  "                    \"count\": { \"type\": \"number\" }",
                  "                },",
                  "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                  "            }",
                  "        }",
                  "    },",
                  "    \"required\": [\"groups\"]",
                  "};",
                  "",
                  "pm.test(\"Response has correct schema\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "id": "0df26bc4-f5b7-4c72-b5f8-b4aa3c76f0fb",
          "name": "Get Spending Analytics",
          "item": [
            {
              "id": "3d13f280-5efd-4848-8709-43460479e91d",
              "name": "Get Spending Analytics 200",
              "request": {
                "url": {
                  "host": [
                    "{{server}}{{spendingAnalyticsUri}}"
                  ],
                  "query": [
                    {
                      "key": "catcode",
                      "value": "C,4"
                    },
                    {
                      "disabled": true,
                      "key": "startDate",
                      "value": "2021-11-20"
                    },
                    {
                      "disabled": true,
                      "key": "endDate",
                      "value": "2021-11-21"
                    },
                    {
                      "disabled": true,
                      "key": "direction",
                      "value": "d"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "disabled": true,
                      "key": "formFile",
                      "type": "file",
                      "src": []
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "38295899-764a-4ffb-ae9e-dc4a70df861f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"groups\": {",
                      "            \"type\": \"array\",",
                      "            \"items\": {",
                      "                \"type\": \"object\",",
                      "                \"properties\": {",
                      "                    \"catcode\": { \"type\": \"string\" },",
                      "                    \"amount\": { \"type\": \"number\" },",
                      "                    \"count\": { \"type\": \"number\" }",
                      "                },",
                      "                \"required\": [\"catcode\", \"amount\", \"count\"]",
                      "            }",
                      "        }",
                      "    },",
                      "    \"required\": [\"groups\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "9e640d3d-d873-4457-a463-091462e676e5"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "fb66852f-fd7b-4b24-87d9-8079fb0c0ff0",
              "name": "Get Spending Analytics 404",
              "request": {
                "url": {
                  "host": [
                    "{{server}}{{spendingAnalyticsUri}}"
                  ],
                  "query": [
                    {
                      "key": "catcode",
                      "value": "A"
                    },
                    {
                      "disabled": true,
                      "key": "startDate",
                      "value": "2021-11-20"
                    },
                    {
                      "disabled": true,
                      "key": "endDate",
                      "value": "2021-11-21"
                    },
                    {
                      "disabled": true,
                      "key": "direction",
                      "value": "d"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "disabled": true,
                      "key": "formFile",
                      "type": "file",
                      "src": []
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "06a9d5c9-2bc9-4899-8711-b4224fb416b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "const expectedSchema = {",
                      "    \"type\": \"object\",",
                      "    \"properties\": {",
                      "        \"message\": { \"type\": \"string\" }",
                      "    },",
                      "    \"required\": [\"message\"]",
                      "};",
                      "",
                      "pm.test(\"Response has correct schema\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(tv4.validate(jsonData, expectedSchema)).to.be.true;",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 500ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);",
                      "});"
                    ],
                    "_lastExecutionId": "8b226734-b2d3-4d6c-97e3-31ae0d3867af"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4a30d9c6-8c64-4950-af59-9e4c4ca2ee11",
          "length": 15,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c9e0836-283c-4024-9d24-712ebd9758b6",
          "scriptId": "38295899-764a-4ffb-ae9e-dc4a70df861f",
          "execution": "9e640d3d-d873-4457-a463-091462e676e5"
        }
      }
    ],
    "error": null
  }
}